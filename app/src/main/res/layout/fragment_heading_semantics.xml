<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2023 CVS Health and/or one of its affiliates

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:layout_marginStart="8dp"
    android:layout_marginEnd="8dp"
    tools:context="com.cvshealth.accessibility.apps.androidviewaccessibilitytechniques.ui.headingsemantics.HeadingSemanticsFragment">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingBottom="32dp">

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:accessibilityHeading="true"
            android:text="@string/heading_semantics_heading"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            style="@style/TextAppearance.MaterialComponents.Headline5"
            tools:ignore="UnusedAttribute" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description_1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/heading_semantics_description_1"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_heading"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description_2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/heading_semantics_description_2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description_1"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <!-- Bad example 1: Big text that is not a heading -->
        <LinearLayout
            android:id="@+id/linear_layout_pseudoheading_1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:importantForAccessibility="yes"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description_2"
            >

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_close_fill"
                android:contentDescription="@null"
                app:tint="@color/error_red" />

            <com.google.android.material.textview.MaterialTextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/heading_semantics_example_1_heading"
                style="@style/TextAppearance.MaterialComponents.Headline5" />

        </LinearLayout>

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_body_1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/heading_semantics_example_1_body_text"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_pseudoheading_1"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <!-- Bad example 2: Ending contentDescription with 'Heading' is not a heading

             Never add role, state, or action information to the contentDescription; only
             information passed to the Accessibility API is actually available to assistive
             technologies like TalkBack.

             One way to tell if this technique has been used is to change the TalkBack Advanced
             Settings value Element description order. Normally, it is "State, name, type" where a
             role like "Heading" is the "type" coming last. If you set Element description order to
             "Type, name, state" then "Heading" should be said first. This pseudo-heading will
             continue to announce "Heading" last.

             The other way to discern genuine accessibility headings is to set the TalkBack Reading
             Control to "Headings" and swipe down to hear the next accessibility heading. This
             and the above pseudo-heading will not be announced by that Reading Control operation.
        -->
        <LinearLayout
            android:id="@+id/linear_layout_pseudoheading_2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:importantForAccessibility="yes"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_body_1"
            tools:ignore="UnusedAttribute"
            >

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_close_fill"
                android:contentDescription="@null"
                app:tint="@color/error_red" />

            <com.google.android.material.textview.MaterialTextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:text="@string/heading_semantics_example_2_heading"
                android:contentDescription="@string/heading_semantics_example_2_heading_content_description"
                style="@style/TextAppearance.MaterialComponents.Headline5" />
        </LinearLayout>

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_body_2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/heading_semantics_example_2_body_text"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_pseudoheading_2"
            style="@style/TextAppearance.MaterialComponents.Body1" />


        <!-- Good example 3: Two accessibility heading techniques

             For API 28+, setting android:accessibilityHeading="true" is the key technique shown.

             For pre-API 28, see the helper method setAsAccessibilityHeading() defined in
             AccessibilityHelper.kt and its use in HeadingSemanticsFragment. That helper method
             applies an AccessibilityDelegateCompat to a View and thereby sets this LinearLayout's
             AccessibilityNodeInfoCompat object's isHeading property to true.
        -->
        <LinearLayout
            android:id="@+id/linear_layout_good_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:accessibilityHeading="true"
            android:importantForAccessibility="yes"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_body_2"
            tools:ignore="UnusedAttribute"
            >

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_check_fill"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:text="@string/heading_semantics_example_3_heading"
                style="@style/TextAppearance.MaterialComponents.Headline5" />
        </LinearLayout>

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_body_3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/heading_semantics_example_3_body_text_1"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_good_heading"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_body_4"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/heading_semantics_example_3_body_text_2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_body_3"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <FrameLayout
            android:id="@+id/frame_spacer"
            android:layout_width="match_parent"
            android:layout_height="8dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_body_4" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</ScrollView>