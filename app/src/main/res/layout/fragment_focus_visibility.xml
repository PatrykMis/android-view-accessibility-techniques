<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2023 CVS Health and/or one of its affiliates

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:layout_marginStart="8dp"
    android:layout_marginEnd="8dp"
    tools:context="com.cvshealth.accessibility.apps.androidviewaccessibilitytechniques.ui.focusvisibility.FocusVisibilityFragment">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingBottom="32dp">

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:accessibilityHeading="true"
            android:text="@string/focus_visibility_heading"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            style="@style/TextAppearance.MaterialComponents.Headline5"
            tools:ignore="UnusedAttribute" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/focus_visibility_description_1"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_heading"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description_2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/focus_visibility_description_2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <!-- Problematic example 1: Default button focus indicator -->
        <androidx.appcompat.widget.LinearLayoutCompat
            android:id="@+id/linear_layout_example_1_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:importantForAccessibility="yes"
            android:accessibilityHeading="true"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description_2"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_circle_filled"
                android:contentDescription="@null"
                app:tint="@color/error_red"/>

            <com.google.android.material.textview.MaterialTextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/focus_visibility_example_1_heading"
                style="@style/TextAppearance.MaterialComponents.Headline6" />

        </androidx.appcompat.widget.LinearLayoutCompat>

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_example_1_description"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/focus_visibility_example_1_description"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_1_heading"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <Button
            android:id="@+id/button_example_1"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:minHeight="48dp"
            android:minWidth="48dp"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/focus_visibility_example_1_button"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_example_1_description" />

        <!-- Good example 2: Custom button focus indicator with app:strokeColor, app:strokeWidth,
             and color state list -->
        <androidx.appcompat.widget.LinearLayoutCompat
            android:id="@+id/linear_layout_example_2_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:importantForAccessibility="yes"
            android:accessibilityHeading="true"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/button_example_1"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_check_fill"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/focus_visibility_example_2_heading"
                style="@style/TextAppearance.MaterialComponents.Headline6" />

        </androidx.appcompat.widget.LinearLayoutCompat>

        <!-- The key techniques in Example 2 are setting app:strokeWidth="2dp",
             app:strokeColor="@color/focus_indicator_color_state_list", and the color state list
             resource file res/color/focus_indicator_color_state_list.xml that applies an opaque
             stroke color when this element is in the focused state.

             These techniques do not work for all control types, but do work well for Material
             Design buttons.
             -->
        <Button
            android:id="@+id/button_example_2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/focus_visibility_example_2_button"
            app:strokeColor="@color/focus_indicator_color_state_list"
            app:strokeWidth="2dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_2_heading" />

        <!-- Good example 3: Custom focus indicator with android:foreground and drawable state list
             -->
        <androidx.appcompat.widget.LinearLayoutCompat
            android:id="@+id/linear_layout_example_3_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:importantForAccessibility="yes"
            android:accessibilityHeading="true"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/button_example_2"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_check_fill"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/focus_visibility_example_3_heading"
                style="@style/TextAppearance.MaterialComponents.Headline6" />

        </androidx.appcompat.widget.LinearLayoutCompat>

        <!-- The key techniques in Example 3 are setting
             android:background="@drawable/focus_indicator_selector", the drawable state list
             resource file res/drawable/focus_indicator_selector.xml that applies an drawable
             outline when this element is in the focused state, and the drawable resource file
             res/drawable/focus_indicator_shope.xml that defines the shape and color of the
             superimposed focus border.

             This technique does not work with Material Design buttons. See Example 2.
             -->
        <com.google.android.material.textfield.TextInputLayout
            android:id="@+id/text_input_layout_example_3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:background="@drawable/focus_indicator_selector"
            android:hint="@string/focus_visibility_example_3_text_input_layout_hint"
            android:textColorHint="#616161"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_3_heading"
            tools:ignore="UnusedAttribute" >

            <com.google.android.material.textfield.TextInputEditText
                android:id="@+id/text_input_edit_text_example_3"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="2dp"
                android:importantForAutofill="no"
                android:inputType="text" />

        </com.google.android.material.textfield.TextInputLayout>

        <!-- Good example 4: Custom focus indicators with android:foreground and drawable state list
             (API 23+) -->
        <androidx.appcompat.widget.LinearLayoutCompat
            android:id="@+id/linear_layout_example_4_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:importantForAccessibility="yes"
            android:accessibilityHeading="true"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_input_layout_example_3"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_check_fill"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/focus_visibility_example_4_heading"
                style="@style/TextAppearance.MaterialComponents.Headline6" />

        </androidx.appcompat.widget.LinearLayoutCompat>

        <!-- The key techniques in Example 4 are setting
             android:foreground="@drawable/focus_indicator_selector", the drawable state list
             resource file res/drawable/focus_indicator_selector.xml that applies an drawable
             outline when this element is in the focused state, and the drawable resource file
             res/drawable/focus_indicator_shope.xml that defines the shape and color of the
             superimposed focus border.

             These techniques work well for most control types, but not for Material Design buttons.

             android:foreground only works for API 23+, but a drawable state list may work with
             android:background on some control types as-is (see Example 3) or when combined into a
             drawable layer list with the selectable item background (not illustrated).
             -->
        <ImageButton
            android:id="@+id/image_button_example_4"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:minHeight="48dp"
            android:minWidth="48dp"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:src="@drawable/ic_angle_right_fill"
            android:contentDescription="@string/focus_visibility_example_4_image_button"
            android:foreground="@drawable/focus_indicator_selector"
            app:tint="?android:textColorPrimary"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_4_heading"
            style="@style/TextAppearance.MaterialComponents.Body1"
            tools:ignore="UnusedAttribute" />

        <com.google.android.material.switchmaterial.SwitchMaterial
            android:id="@+id/switch_example_4"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:paddingStart="8dp"
            android:paddingEnd="8dp"
            android:text="@string/focus_visibility_example_4_switch"
            android:foreground="@drawable/focus_indicator_selector"
            app:switchPadding="8dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/image_button_example_4"
            tools:ignore="UnusedAttribute" />

        <com.google.android.material.checkbox.MaterialCheckBox
            android:id="@+id/checkbox_example_4"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:paddingStart="4dp"
            android:paddingEnd="8dp"
            android:foreground="@drawable/focus_indicator_selector"
            android:text="@string/focus_visibility_example_4_checkbox"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/switch_example_4"
            tools:ignore="UnusedAttribute" />

        <TextView
            android:id="@+id/text_example_4_edit_text_label"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/focus_visibility_example_4_edit_text_label"
            android:labelFor="@+id/edit_text_example_4"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/checkbox_example_4"
            tools:ignore="UnusedAttribute" />

        <EditText
            android:id="@+id/edit_text_example_4"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:paddingStart="4dp"
            android:paddingEnd="8dp"
            android:inputType="text"
            android:importantForAutofill="no"
            android:foreground="@drawable/focus_indicator_selector"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_example_4_edit_text_label"
            tools:ignore="UnusedAttribute" />

        <com.google.android.material.textfield.TextInputLayout
            android:id="@+id/text_input_layout_example_4"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:labelFor="@+id/text_input_edit_text_example_4"
            android:foreground="@drawable/focus_indicator_selector"
            android:hint="@string/focus_visibility_example_4_text_input_layout_hint"
            android:textColorHint="#616161"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/edit_text_example_4"
            tools:ignore="UnusedAttribute" >

            <com.google.android.material.textfield.TextInputEditText
                android:id="@+id/text_input_edit_text_example_4"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:inputType="text"
                android:layout_marginBottom="2dp"
                android:importantForAutofill="no" />

        </com.google.android.material.textfield.TextInputLayout>

    </androidx.constraintlayout.widget.ConstraintLayout>
</ScrollView>