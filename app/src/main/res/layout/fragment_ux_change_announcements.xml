<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2023 CVS Health and/or one of its affiliates

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:layout_marginStart="8dp"
    android:layout_marginEnd="8dp"
    tools:context="com.cvshealth.accessibility.apps.androidviewaccessibilitytechniques.ui.uxchangeannouncements.UxChangeAnnouncementsFragment">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingBottom="32dp">

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:accessibilityHeading="true"
            android:text="@string/ux_change_announcements_heading"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            style="@style/TextAppearance.MaterialComponents.Headline5"
            tools:ignore="UnusedAttribute" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/ux_change_announcements_description"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_heading"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description_2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/ux_change_announcements_description_2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <!-- Good example 1: Counter with accessibilityLiveRegion -->
        <LinearLayout
            android:id="@+id/linear_layout_example_counter_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:importantForAccessibility="yes"
            android:accessibilityHeading="true"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description_2"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_check_fill"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:id="@+id/text_example_counter_heading"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:text="@string/ux_change_announcements_example_counter_heading"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@id/text_description"
                style="@style/TextAppearance.MaterialComponents.Headline5"/>

        </LinearLayout>

        <!-- Example 1's key technique is setting android:accessibilityLiveRegion="polite" so that
             whenever the value of this TextView is changed, AccessibilityServices like TalkBack
             can announce the change.

             Note the use of "polite", which means that such value change announcements will not
             interrupt other screen reader announcements. The alternative "assertive" will override
             other announcements and is generally less appropriate for this use.
             -->
        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_counter"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/ux_change_announcements_counter"
            android:accessibilityLiveRegion="polite"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_counter_heading"
            style="@style/TextAppearance.MaterialComponents.Headline6"
            tools:text="Counter: 0"/>

        <com.google.android.material.button.MaterialButton
            android:id="@+id/button_increment_counter"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/ux_change_announcements_increment_counter"
            app:strokeColor="@color/focus_indicator_color_state_list"
            app:strokeWidth="2dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toStartOf="@+id/button_reset_counter"
            app:layout_constraintTop_toBottomOf="@id/text_counter"
            />

        <com.google.android.material.button.MaterialButton
            android:id="@+id/button_reset_counter"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/ux_change_announcements_reset_counter"
            app:strokeColor="@color/focus_indicator_color_state_list"
            app:strokeWidth="2dp"
            app:layout_constraintStart_toEndOf="@+id/button_increment_counter"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_counter" />

        <!-- Good example 2: Waiting indicator with accessibilityLiveRegion and
             announceForAccessibility -->
        <LinearLayout
            android:id="@+id/linear_layout_example_waiting_indicator_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:importantForAccessibility="yes"
            android:accessibilityHeading="true"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/button_reset_counter"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_check_fill"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:id="@+id/text_example_waiting_indicator_heading"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginTop="8dp"
                android:layout_marginEnd="8dp"
                android:text="@string/ux_change_announcements_example_waiting_indicator"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@id/button_reset_counter"
                style="@style/TextAppearance.MaterialComponents.Headline5" />

        </LinearLayout>

        <!-- Example 2 uses two key techniques: first, the ContentLoadingProgressBar has
             android:accessibilityLiveRegion="polite" set so that it is announced to Accessibility
             Services like TalkBack when it is made visible. However, this technique does not
             announce when the element becomes hidden. That announcement employs the other key
             technique of using View.announceForAccessibility(), as shown in
             UxChangeAnnouncementFragment.kt.
             -->
        <com.google.android.material.button.MaterialButton
            android:id="@+id/button_show_waiting_indicator"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/ux_change_announcements_show_waiting_indicator"
            app:strokeColor="@color/focus_indicator_color_state_list"
            app:strokeWidth="2dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_waiting_indicator_heading" />

        <androidx.core.widget.ContentLoadingProgressBar
            android:id="@+id/progressBarWaitingIndicator"
            style="?android:attr/progressBarStyle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:accessibilityLiveRegion="polite"
            android:contentDescription="@string/ux_change_announcements_waiting"
            android:max="0"
            android:visibility="gone"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            tools:visibility="visible"/>

        <FrameLayout
            android:id="@+id/frame_spacer"
            android:layout_width="match_parent"
            android:layout_height="8dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/button_show_waiting_indicator" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</ScrollView>