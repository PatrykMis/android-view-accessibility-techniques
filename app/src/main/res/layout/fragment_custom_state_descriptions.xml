<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2023 CVS Health and/or one of its affiliates

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:layout_marginStart="8dp"
    android:layout_marginEnd="8dp"
    tools:context="com.cvshealth.accessibility.apps.androidviewaccessibilitytechniques.ui.customstatedescriptions.CustomStateDescriptionsFragment">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:paddingBottom="32dp">

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:accessibilityHeading="true"
            android:text="@string/custom_state_descriptions_heading"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            style="@style/TextAppearance.MaterialComponents.Headline5"
            tools:ignore="UnusedAttribute" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/custom_state_descriptions_description"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_heading"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description_2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/custom_state_descriptions_description_2"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <com.google.android.material.textview.MaterialTextView
            android:id="@+id/text_description_3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginTop="8dp"
            android:layout_marginEnd="8dp"
            android:text="@string/custom_state_descriptions_description_3"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description_2"
            style="@style/TextAppearance.MaterialComponents.Body1" />

        <!-- OK example 1: Checkbox with default state labels -->
        <LinearLayout
            android:id="@+id/linear_layout_example_1_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:accessibilityHeading="true"
            android:importantForAccessibility="yes"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/text_description_3"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_circle_filled"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:id="@+id/text_example_1_heading"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/custom_state_descriptions_example_1_heading"
                style="@style/TextAppearance.MaterialComponents.Headline6" />
        </LinearLayout>

        <!-- The key technique of Example 1 is that the state label is left unchanged to its default
             value. -->
        <com.google.android.material.checkbox.MaterialCheckBox
            android:id="@+id/checkbox_with_default_state_descriptions"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:paddingEnd="4dp"
            android:text="@string/custom_state_descriptions_default_checkbox"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_1_heading"
            />

        <!-- Good example 2: Checkbox with customized state labels -->
        <LinearLayout
            android:id="@+id/linear_layout_example_2_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:accessibilityHeading="true"
            android:importantForAccessibility="yes"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/checkbox_with_default_state_descriptions"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_check_fill"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:id="@+id/text_example_2_heading"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/custom_state_descriptions_example_2_heading"
                style="@style/TextAppearance.MaterialComponents.Headline6" />
        </LinearLayout>

        <!-- The key technique of Example 2 is that the state label is overridden in
             CustomStateDescriptionsFragment.kt. -->
        <com.google.android.material.checkbox.MaterialCheckBox
            android:id="@+id/checkbox_with_customized_state_descriptions"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:paddingEnd="4dp"
            android:text="@string/custom_state_descriptions_customized_checkbox"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_2_heading"
            />

        <!-- OK example 3: Switch with default state labels -->
        <LinearLayout
            android:id="@+id/linear_layout_example_3_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:accessibilityHeading="true"
            android:importantForAccessibility="yes"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/checkbox_with_customized_state_descriptions"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_circle_filled"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:id="@+id/text_example_3_heading"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/custom_state_descriptions_example_3_heading"
                style="@style/TextAppearance.MaterialComponents.Headline6" />
        </LinearLayout>

        <!-- The key technique of Example 3 is that the state label is left unchanged to its default
             value. -->
        <com.google.android.material.switchmaterial.SwitchMaterial
            android:id="@+id/switch_with_default_state_descriptions"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:textAlignment="textEnd"
            android:text="@string/custom_state_descriptions_default_switch"
            app:switchPadding="4dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_3_heading"
            />

        <!-- Good example 4: Switch with custom state and click labels -->
        <LinearLayout
            android:id="@+id/linear_layout_example_4_heading"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="8dp"
            android:orientation="horizontal"
            android:accessibilityHeading="true"
            android:importantForAccessibility="yes"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/switch_with_default_state_descriptions"
            tools:ignore="UnusedAttribute">

            <ImageView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:backgroundTint="@android:color/transparent"
                android:padding="8dp"
                android:src="@drawable/ic_check_fill"
                android:contentDescription="@null"
                app:tint="@color/success_green" />

            <com.google.android.material.textview.MaterialTextView
                android:id="@+id/text_example_4_heading"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="8dp"
                android:layout_marginEnd="8dp"
                android:layout_gravity="center_vertical"
                android:text="@string/custom_state_descriptions_example_4_heading"
                style="@style/TextAppearance.MaterialComponents.Headline6" />
        </LinearLayout>

        <!-- The key techniques of Example 4 are that the state label and click label are overridden
             in CustomStateDescriptionsFragment.kt. -->
        <com.google.android.material.switchmaterial.SwitchMaterial
            android:id="@+id/switch_with_customized_state_descriptions"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="8dp"
            android:layout_marginEnd="8dp"
            android:textAlignment="textEnd"
            android:text="@string/custom_state_descriptions_customized_switch"
            app:switchPadding="4dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/linear_layout_example_4_heading"
            />

        <FrameLayout
            android:id="@+id/frame_spacer"
            android:layout_width="match_parent"
            android:layout_height="8dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/switch_with_customized_state_descriptions" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</ScrollView>